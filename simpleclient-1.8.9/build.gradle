plugins {
    id 'java'
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'legacy-looming' version '1.2-SNAPSHOT'
}

repositories {
    //maven { url = "https://repo.legacyfabric.net/repository/legacyfabric/" }
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings legacy.yarn(project.minecraft_version, project.mappings_version)
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    // Core
    implementation project(path: ':simpleclient-core')
    include project(path: ':simpleclient-core')
    // Dependencies
    modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_api_version}"
}

loom {
    accessWidenerPath = file('src/main/resources/simpleclient.accesswidener')
}

sourceSets {
    main.resources.srcDirs += "${project(':simpleclient-core').projectDir}/src/main/resources"
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'version': version, 'minecraft_version': project.minecraft_version, 'fabric_loader_version': project.fabric_loader_version, 'fabric_api_version': project.fabric_api_version
	}
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

task copyJar(type: Copy) {
    group = 'build'
    from remapJar
    if (!rootProject.file('build/libs').exists()) rootProject.file('build/libs').mkdirs()
    into rootProject.file('build/libs')
}
remapJar.finalizedBy copyJar